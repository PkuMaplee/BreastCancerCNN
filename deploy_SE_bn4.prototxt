# Enter your network definition here.
# Use Shift+Enter to update the visualization.
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param { shape: { dim: 10 dim: 3 dim: 224 dim: 224 }}
}
layer {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1/7x7_s2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1/bn"
  type: "BatchNorm"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "conv1/bn"
  type: "BatchNorm"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "conv1/scale"
  type: "Scale"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1/relu_7x7"
  type: "ReLU"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/7x7_s2"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2/3x3_reduce"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "conv2/3x3_reduce"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "conv2/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "conv2/relu_3x3_scale"
  type: "Scale"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "conv2/relu_3x3_reduce"
  type: "ReLU"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
}
layer {
  name: "conv2/3x3"
  type: "Convolution"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_bn"
  type: "BatchNorm"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "conv2/relu_bn"
  type: "BatchNorm"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "conv2/relu_scale"
  type: "Scale"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2/relu_3x3"
  type: "ReLU"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
}
layer {
  name: "pool2/3x3_s2"
  type: "Pooling"
  bottom: "conv2/3x3"
  top: "pool2/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3a/1x1"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/1x1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3a/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3a/relu_1x1_scale"
  type: "Scale"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_1x1"
  type: "ReLU"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
}
layer {
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/3x3_reduce"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce_scale"
  type: "Scale"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
}
layer {
  name: "inception_3a/3x3"
  type: "Convolution"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
} 
layer {
  name: "inception_3a/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3a/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3a/relu_3x3_scale"
  type: "Scale"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_3x3"
  type: "ReLU"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
}
layer {
  name: "inception_3a/5x5_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/5x5_reduce"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce_scale"
  type: "Scale"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5_reduce"
}
layer {
  name: "inception_3a/5x5"
  type: "Convolution"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_3a/5x5"
  top: "inception_3a/5x5"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3a/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_3a/5x5"
  top: "inception_3a/5x5"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3a/relu_5x5_scale"
  type: "Scale"
  bottom: "inception_3a/5x5"
  top: "inception_3a/5x5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_5x5"
  type: "ReLU"
  bottom: "inception_3a/5x5"
  top: "inception_3a/5x5"
}
layer {
  name: "inception_3a/pool"
  type: "Pooling"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a/pool_proj"
  type: "Convolution"
  bottom: "inception_3a/pool"
  top: "inception_3a/pool_proj"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3a/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3a/relu_pool_proj_scale"
  type: "Scale"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
}
layer {
  name: "inception_3a/concat"
  type: "Concat"
  bottom: "inception_3a/1x1"
  bottom: "inception_3a/3x3"
  bottom: "inception_3a/5x5"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/concat"
}
layer {
  name: "inception_3a_global_pool"
  type: "Pooling"
  bottom: "inception_3a/concat"
  top: "inception_3a_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_3a_1x1_down"
  type: "Convolution"
  bottom: "inception_3a_global_pool"
  top: "inception_3a_1x1_down"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3a_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_3a_1x1_down"
  top: "inception_3a_1x1_down"
}
layer {
  name: "inception_3a_1x1_up"
  type: "Convolution"
  bottom: "inception_3a_1x1_down"
  top: "inception_3a_1x1_up"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3a_prob"
  type: "Sigmoid"
  bottom: "inception_3a_1x1_up"
  top: "inception_3a_1x1_up"
}
layer {
  name: "inception_3a_prob_reshape"
  type: "Reshape"
  bottom: "inception_3a_1x1_up"
  top: "inception_3a_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_3a_scale"
  type: "Scale"
  bottom: "inception_3a/concat"
  bottom: "inception_3a_prob_reshape"
  top: "inception_3a/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_3b/1x1"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/1x1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: " inception_3b/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: " inception_3b/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3b/relu_1x1_scale"
  type: "Scale"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_1x1"
  type: "ReLU"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
}
layer {
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce_scale"
  type: "Scale"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
}
layer {
  name: "inception_3b/3x3"
  type: "Convolution"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3b/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3b/relu_3x3_scale"
  type: "Scale"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_3x3"
  type: "ReLU"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
}
layer {
  name: "inception_3b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce_scale"
  type: "Scale"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5_reduce"
}
layer {
  name: "inception_3b/5x5"
  type: "Convolution"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_3b/5x5"
  top: "inception_3b/5x5"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3b/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_3b/5x5"
  top: "inception_3b/5x5"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3b/relu_5x5_scale"
  type: "Scale"
  bottom: "inception_3b/5x5"
  top: "inception_3b/5x5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_5x5"
  type: "ReLU"
  bottom: "inception_3b/5x5"
  top: "inception_3b/5x5"
}
layer {
  name: "inception_3b/pool"
  type: "Pooling"
  bottom: "inception_3a/output"
  top: "inception_3b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b/pool_proj"
  type: "Convolution"
  bottom: "inception_3b/pool"
  top: "inception_3b/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_3b/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_3b/relu_pool_proj_scale"
  type: "Scale"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
}
layer {
  name: "inception_3b/concat"
  type: "Concat"
  bottom: "inception_3b/1x1"
  bottom: "inception_3b/3x3"
  bottom: "inception_3b/5x5"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/concat"
}
layer {
  name: "inception_3b_global_pool"
  type: "Pooling"
  bottom: "inception_3b/concat"
  top: "inception_3b_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_3b_1x1_down"
  type: "Convolution"
  bottom: "inception_3b_global_pool"
  top: "inception_3b_1x1_down"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 30
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3b_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_3b_1x1_down"
  top: "inception_3b_1x1_down"
}
layer {
  name: "inception_3b_1x1_up"
  type: "Convolution"
  bottom: "inception_3b_1x1_down"
  top: "inception_3b_1x1_up"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 480
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3b_prob"
  type: "Sigmoid"
  bottom: "inception_3b_1x1_up"
  top: "inception_3b_1x1_up"
}
layer {
  name: "inception_3b_prob_reshape"
  type: "Reshape"
  bottom: "inception_3b_1x1_up"
  top: "inception_3b_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_3b_scale"
  type: "Scale"
  bottom: "inception_3b/concat"
  bottom: "inception_3b_prob_reshape"
  top: "inception_3b/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "pool3/3x3_s2"
  type: "Pooling"
  bottom: "inception_3b/output"
  top: "pool3/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_4a/1x1"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4a/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4a/relu_1x1_scale"
  type: "Scale"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_1x1"
  type: "ReLU"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
}
layer {
  name: "inception_4a/3x3_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce_scale"
  type: "Scale"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
}
layer {
  name: "inception_4a/3x3"
  type: "Convolution"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 208
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4a/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4a/relu_3x3_scale"
  type: "Scale"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_3x3"
  type: "ReLU"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
}
layer {
  name: "inception_4a/5x5_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4a/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4a/relu_5x5_reduce_scale"
  type: "Scale"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5_reduce"
}
layer {
  name: "inception_4a/5x5"
  type: "Convolution"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4a/5x5"
  top: "inception_4a/5x5"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4a/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4a/5x5"
  top: "inception_4a/5x5"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4a/relu_5x5_scale"
  type: "Scale"
  bottom: "inception_4a/5x5"
  top: "inception_4a/5x5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_5x5"
  type: "ReLU"
  bottom: "inception_4a/5x5"
  top: "inception_4a/5x5"
}
layer {
  name: "inception_4a/pool"
  type: "Pooling"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4a/pool_proj"
  type: "Convolution"
  bottom: "inception_4a/pool"
  top: "inception_4a/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4a/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4a/relu_pool_proj_scale"
  type: "Scale"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
}

layer {
  name: "inception_4a/concat"
  type: "Concat"
  bottom: "inception_4a/1x1"
  bottom: "inception_4a/3x3"
  bottom: "inception_4a/5x5"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/concat"
}
layer {
  name: "inception_4a_global_pool"
  type: "Pooling"
  bottom: "inception_4a/concat"
  top: "inception_4a_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4a_1x1_down"
  type: "Convolution"
  bottom: "inception_4a_global_pool"
  top: "inception_4a_1x1_down"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4a_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4a_1x1_down"
  top: "inception_4a_1x1_down"
}
layer {
  name: "inception_4a_1x1_up"
  type: "Convolution"
  bottom: "inception_4a_1x1_down"
  top: "inception_4a_1x1_up"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4a_prob"
  type: "Sigmoid"
  bottom: "inception_4a_1x1_up"
  top: "inception_4a_1x1_up"
}
layer {
  name: "inception_4a_prob_reshape"
  type: "Reshape"
  bottom: "inception_4a_1x1_up"
  top: "inception_4a_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4a_scale"
  type: "Scale"
  bottom: "inception_4a/concat"
  bottom: "inception_4a_prob_reshape"
  top: "inception_4a/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "loss1/ave_pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "loss1/ave_pool"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss1/conv"
  type: "Convolution"
  bottom: "loss1/ave_pool"
  top: "loss1/conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss1/relu_conv_bn"
  type: "BatchNorm"
  bottom: "loss1/conv"
  top: "loss1/conv"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "loss1/relu_conv_bn"
  type: "BatchNorm"
  bottom: "loss1/conv"
  top: "loss1/conv"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "loss1/relu_conv_scale"
  type: "Scale"
  bottom: "loss1/conv"
  top: "loss1/conv"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "loss1/relu_conv"
  type: "ReLU"
  bottom: "loss1/conv"
  top: "loss1/conv"
}
layer {
  name: "loss1/fc"
  type: "InnerProduct"
  bottom: "loss1/conv"
  top: "loss1/fc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss1/relu_fc"
  type: "ReLU"
  bottom: "loss1/fc"
  top: "loss1/fc"
}
layer {
  name: "loss1/drop_fc"
  type: "Dropout"
  bottom: "loss1/fc"
  top: "loss1/fc"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "loss11/classifier"
  type: "InnerProduct"
  bottom: "loss1/fc"
  top: "loss1/classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4b/1x1"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4b/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4b/relu_1x1_scale"
  type: "Scale"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_1x1"
  type: "ReLU"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
}
layer {
  name: "inception_4b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4b/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4b/relu_3x3_reduce_scale"
  type: "Scale"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
}
layer {
  name: "inception_4b/3x3"
  type: "Convolution"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4b/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4b/relu_3x3_scale"
  type: "Scale"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_3x3"
  type: "ReLU"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
}
layer {
  name: "inception_4b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4b/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4b/relu_5x5_reduce_scale"
  type: "Scale"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5_reduce"
}
layer {
  name: "inception_4b/5x5"
  type: "Convolution"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4b/5x5"
  top: "inception_4b/5x5"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4b/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4b/5x5"
  top: "inception_4b/5x5"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4b/relu_5x5_scale"
  type: "Scale"
  bottom: "inception_4b/5x5"
  top: "inception_4b/5x5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_5x5"
  type: "ReLU"
  bottom: "inception_4b/5x5"
  top: "inception_4b/5x5"
}
layer {
  name: "inception_4b/pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "inception_4b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4b/pool_proj"
  type: "Convolution"
  bottom: "inception_4b/pool"
  top: "inception_4b/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4b/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4b/relu_pool_proj_scale"
  type: "Scale"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
}
layer {
  name: "inception_4b/concat"
  type: "Concat"
  bottom: "inception_4b/1x1"
  bottom: "inception_4b/3x3"
  bottom: "inception_4b/5x5"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/concat"
}
layer {
  name: "inception_4b_global_pool"
  type: "Pooling"
  bottom: "inception_4b/concat"
  top: "inception_4b_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4b_1x1_down"
  type: "Convolution"
  bottom: "inception_4b_global_pool"
  top: "inception_4b_1x1_down"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4b_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4b_1x1_down"
  top: "inception_4b_1x1_down"
}
layer {
  name: "inception_4b_1x1_up"
  type: "Convolution"
  bottom: "inception_4b_1x1_down"
  top: "inception_4b_1x1_up"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4b_prob"
  type: "Sigmoid"
  bottom: "inception_4b_1x1_up"
  top: "inception_4b_1x1_up"
}
layer {
  name: "inception_4b_prob_reshape"
  type: "Reshape"
  bottom: "inception_4b_1x1_up"
  top: "inception_4b_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4b_scale"
  type: "Scale"
  bottom: "inception_4b/concat"
  bottom: "inception_4b_prob_reshape"
  top: "inception_4b/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_4c/1x1"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4c/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4c/relu_1x1_scale"
  type: "Scale"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_1x1"
  type: "ReLU"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
}
layer {
  name: "inception_4c/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4c/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4c/relu_3x3_reduce_scale"
  type: "Scale"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
}
layer {
  name: "inception_4c/3x3"
  type: "Convolution"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
} 
layer {
  name: "inception_4c/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4c/relu_3x3_scale"
  type: "Scale"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_3x3"
  type: "ReLU"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
}
layer {
  name: "inception_4c/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4c/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4c/relu_5x5_reduce_scale"
  type: "Scale"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5_reduce"
}
layer {
  name: "inception_4c/5x5"
  type: "Convolution"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4c/5x5"
  top: "inception_4c/5x5"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4c/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4c/5x5"
  top: "inception_4c/5x5"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4c/relu_5x5_scale"
  type: "Scale"
  bottom: "inception_4c/5x5"
  top: "inception_4c/5x5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_5x5"
  type: "ReLU"
  bottom: "inception_4c/5x5"
  top: "inception_4c/5x5"
}
layer {
  name: "inception_4c/pool"
  type: "Pooling"
  bottom: "inception_4b/output"
  top: "inception_4c/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4c/pool_proj"
  type: "Convolution"
  bottom: "inception_4c/pool"
  top: "inception_4c/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4c/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4c/relu_pool_proj_scale"
  type: "Scale"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
}
layer {
  name: "inception_4c/concat"
  type: "Concat"
  bottom: "inception_4c/1x1"
  bottom: "inception_4c/3x3"
  bottom: "inception_4c/5x5"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/concat"
}
layer {
  name: "inception_4c_global_pool"
  type: "Pooling"
  bottom: "inception_4c/concat"
  top: "inception_4c_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4c_1x1_down"
  type: "Convolution"
  bottom: "inception_4c_global_pool"
  top: "inception_4c_1x1_down"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4c_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4c_1x1_down"
  top: "inception_4c_1x1_down"
}
layer {
  name: "inception_4c_1x1_up"
  type: "Convolution"
  bottom: "inception_4c_1x1_down"
  top: "inception_4c_1x1_up"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4c_prob"
  type: "Sigmoid"
  bottom: "inception_4c_1x1_up"
  top: "inception_4c_1x1_up"
}
layer {
  name: "inception_4c_prob_reshape"
  type: "Reshape"
  bottom: "inception_4c_1x1_up"
  top: "inception_4c_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4c_scale"
  type: "Scale"
  bottom: "inception_4c/concat"
  bottom: "inception_4c_prob_reshape"
  top: "inception_4c/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_4d/1x1"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4d/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4d/relu_1x1_scale"
  type: "Scale"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_1x1"
  type: "ReLU"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
}
layer {
  name: "inception_4d/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 144
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4d/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4d/relu_3x3_reduce_scale"
  type: "Scale"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
}
layer {
  name: "inception_4d/3x3"
  type: "Convolution"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 288
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4d/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4d/relu_3x3_scale"
  type: "Scale"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_3x3"
  type: "ReLU"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
}
layer {
  name: "inception_4d/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4d/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4d/relu_5x5_reduce_scale"
  type: "Scale"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5_reduce"
}
layer {
  name: "inception_4d/5x5"
  type: "Convolution"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4d/5x5"
  top: "inception_4d/5x5"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4d/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4d/5x5"
  top: "inception_4d/5x5"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4d/relu_5x5_scale"
  type: "Scale"
  bottom: "inception_4d/5x5"
  top: "inception_4d/5x5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_5x5"
  type: "ReLU"
  bottom: "inception_4d/5x5"
  top: "inception_4d/5x5"
}
layer {
  name: "inception_4d/pool"
  type: "Pooling"
  bottom: "inception_4c/output"
  top: "inception_4d/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4d/pool_proj"
  type: "Convolution"
  bottom: "inception_4d/pool"
  top: "inception_4d/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4d/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4d/relu_pool_proj_scale"
  type: "Scale"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
}
layer {
  name: "inception_4d/concat"
  type: "Concat"
  bottom: "inception_4d/1x1"
  bottom: "inception_4d/3x3"
  bottom: "inception_4d/5x5"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/concat"
}
layer {
  name: "inception_4d_global_pool"
  type: "Pooling"
  bottom: "inception_4d/concat"
  top: "inception_4d_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4d_1x1_down"
  type: "Convolution"
  bottom: "inception_4d_global_pool"
  top: "inception_4d_1x1_down"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 33
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4d_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4d_1x1_down"
  top: "inception_4d_1x1_down"
}
layer {
  name: "inception_4d_1x1_up"
  type: "Convolution"
  bottom: "inception_4d_1x1_down"
  top: "inception_4d_1x1_up"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 528
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4d_prob"
  type: "Sigmoid"
  bottom: "inception_4d_1x1_up"
  top: "inception_4d_1x1_up"
}
layer {
  name: "inception_4d_prob_reshape"
  type: "Reshape"
  bottom: "inception_4d_1x1_up"
  top: "inception_4d_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4d_scale"
  type: "Scale"
  bottom: "inception_4d/concat"
  bottom: "inception_4d_prob_reshape"
  top: "inception_4d/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "loss2/ave_pool"
  type: "Pooling"
  bottom: "inception_4d/output"
  top: "loss2/ave_pool"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss2/conv"
  type: "Convolution"
  bottom: "loss2/ave_pool"
  top: "loss2/conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss2/relu_conv_bn"
  type: "BatchNorm"
  bottom: "loss2/conv"
  top: "loss2/conv"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "loss2/relu_conv_bn"
  type: "BatchNorm"
  bottom: "loss2/conv"
  top: "loss2/conv"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "loss2/relu_conv_scale"
  type: "Scale"
  bottom: "loss2/conv"
  top: "loss2/conv"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "loss2/relu_conv"
  type: "ReLU"
  bottom: "loss2/conv"
  top: "loss2/conv"
}
layer {
  name: "loss2/fc"
  type: "InnerProduct"
  bottom: "loss2/conv"
  top: "loss2/fc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss2/relu_fc"
  type: "ReLU"
  bottom: "loss2/fc"
  top: "loss2/fc"
}
layer {
  name: "loss2/drop_fc"
  type: "Dropout"
  bottom: "loss2/fc"
  top: "loss2/fc"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "loss22/classifier"
  type: "InnerProduct"
  bottom: "loss2/fc"
  top: "loss2/classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4e/1x1"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4e/1x1"
  top: "inception_4e/1x1"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4e/relu_1x1_bn"
  type: "BatchNorm"
  bottom: "inception_4e/1x1"
  top: "inception_4e/1x1"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4e/relu_1x1_scale"
  type: "Scale"
  bottom: "inception_4e/1x1"
  top: "inception_4e/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_1x1"
  type: "ReLU"
  bottom: "inception_4e/1x1"
  top: "inception_4e/1x1"
}
layer {
  name: "inception_4e/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4e/relu_3x3_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4e/relu_3x3_reduce_scale"
  type: "Scale"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
}
layer {
  name: "inception_4e/3x3"
  type: "Convolution"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4e/relu_3x3_bn"
  type: "BatchNorm"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4e/relu_3x3_scale"
  type: "Scale"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_3x3"
  type: "ReLU"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
}
layer {
  name: "inception_4e/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5_reduce"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4e/relu_5x5_reduce_bn"
  type: "BatchNorm"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5_reduce"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4e/relu_5x5_reduce_scale"
  type: "Scale"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5_reduce"
}
layer {
  name: "inception_4e/5x5"
  type: "Convolution"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4e/5x5"
  top: "inception_4e/5x5"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4e/relu_5x5_bn"
  type: "BatchNorm"
  bottom: "inception_4e/5x5"
  top: "inception_4e/5x5"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4e/relu_5x5_scale"
  type: "Scale"
  bottom: "inception_4e/5x5"
  top: "inception_4e/5x5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_5x5"
  type: "ReLU"
  bottom: "inception_4e/5x5"
  top: "inception_4e/5x5"
}
layer {
  name: "inception_4e/pool"
  type: "Pooling"
  bottom: "inception_4d/output"
  top: "inception_4e/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4e/pool_proj"
  type: "Convolution"
  bottom: "inception_4e/pool"
  top: "inception_4e/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4e/pool_proj"
  top: "inception_4e/pool_proj"
  batch_norm_param {
    use_global_stats: false
    eps: 0.001
  }
include {
    phase: TRAIN
  }
}
layer {
  name: "inception_4e/relu_pool_proj_bn"
  type: "BatchNorm"
  bottom: "inception_4e/pool_proj"
  top: "inception_4e/pool_proj"
  batch_norm_param {
    use_global_stats: true
    eps: 0.001
  }
include {
    phase: TEST
  }
}
layer {
  name: "inception_4e/relu_pool_proj_scale"
  type: "Scale"
  bottom: "inception_4e/pool_proj"
  top: "inception_4e/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4e/pool_proj"
  top: "inception_4e/pool_proj"
}
layer {
  name: "inception_4e/concat"
  type: "Concat"
  bottom: "inception_4e/1x1"
  bottom: "inception_4e/3x3"
  bottom: "inception_4e/5x5"
  bottom: "inception_4e/pool_proj"
  top: "inception_4e/concat"
}
layer {
  name: "inception_4e_global_pool"
  type: "Pooling"
  bottom: "inception_4e/concat"
  top: "inception_4e_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4e_1x1_down"
  type: "Convolution"
  bottom: "inception_4e_global_pool"
  top: "inception_4e_1x1_down"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 52
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4e_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4e_1x1_down"
  top: "inception_4e_1x1_down"
}
layer {
  name: "inception_4e_1x1_up"
  type: "Convolution"
  bottom: "inception_4e_1x1_down"
  top: "inception_4e_1x1_up"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 832
    kernel_size: 1
    stride: 1
	weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_4e_prob"
  type: "Sigmoid"
  bottom: "inception_4e_1x1_up"
  top: "inception_4e_1x1_up"
}
layer {
  name: "inception_4e_prob_reshape"
  type: "Reshape"
  bottom: "inception_4e_1x1_up"
  top: "inception_4e_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4e_scale"
  type: "Scale"
  bottom: "inception_4e/concat"
  bottom: "inception_4e_prob_reshape"
  top: "inception_4e/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_4e2/concat"
  type: "Concat"
  bottom: "inception_4e/output"
  bottom: "inception_4b/output"
  bottom: "inception_4c/output"
  bottom: "inception_4d/output"
  top: "inception_4e2/concat"
}
 
layer {
  name: "pool4/3x3_s2"
  type: "Pooling"
  bottom: "inception_4e2/concat"
  top: "pool4/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool5/7x7_s1"
  type: "Pooling"
  bottom: "pool4/3x3_s2"
  top: "pool5/7x7_s1"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "loss333/classifier"
  type: "InnerProduct"
  bottom: "pool5/7x7_s1"
  top: "loss3/classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "loss3/classifier"
  top: "prob"
}

